{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPositiveInteger from '@stdlib/assert-is-positive-integer';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Serializes a one-sample Z-test results object as a formatted string.\n*\n* ## Notes\n*\n* -   Example output:\n*\n*     ```text\n*\n*     One-sample Z-test\n*\n*     Alternative hypothesis: True mean is less than 1.0\n*\n*        pValue: 0.0406\n*        statistic: 9.9901\n*        95% confidence interval: [9.7821, 10.4451]\n*\n*     Test Decision: Reject null in favor of alternative at 5% significance level\n*\n*     ```\n*\n* @param {Object} results - one-sample Z-test results object\n* @param {Options} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits to display after decimal points\n* @param {boolean} [opts.decision=true] - boolean indicating whether to show the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} serialized results\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var results = {\n*     'rejected': false,\n*     'alpha': 0.05,\n*     'pValue': 0.3364,\n*     'statistic': 11.7586,\n*     'nullValue': 0.0,\n*     'sd': 0.4563,\n*     'ci': new Float64Array( [ 9.9983, 11.4123 ] ),\n*     'alternative': 'two-sided',\n*     'method': 'One-sample Z-test'\n* };\n*\n* var str = toString( results );\n* // returns <string>\n*/\nfunction toString( results, opts ) { // eslint-disable-line stdlib/no-redeclare\n\tvar decision;\n\tvar level;\n\tvar dgts;\n\tvar out;\n\tvar alt;\n\tvar ci;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'null47', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'null3P', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'null2o', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tswitch ( results.alternative ) {\n\tcase 'less':\n\t\talt = 'less than';\n\t\tbreak;\n\tcase 'greater':\n\t\talt = 'greater than';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\talt = 'not equal to';\n\t\tbreak;\n\t}\n\n\tlevel = ( 1.0 - results.alpha ) * 100;\n\tci = results.ci;\n\n\tout = [\n\t\t'',\n\t\tresults.method,\n\t\t'',\n\t\tformat( 'Alternative hypothesis: True mean is %s %0.'+dgts+'f', alt, results.nullValue ),\n\t\t'',\n\t\tformat( '    pValue: %0.'+dgts+'f', results.pValue ),\n\t\tformat( '    statistic: %0.'+dgts+'f', results.statistic ),\n\t\tformat( '    %.'+dgts+'f%% confidence interval: [%0.'+dgts+'f, %0.'+dgts+'f]', level, ci[ 0 ], ci[ 1 ] ),\n\t\t''\n\t];\n\tif ( decision ) {\n\t\tout.push( format( 'Test Decision: %s null in favor of alternative at %.'+dgts+'f%% significance level', ( results.rejected ) ? 'Reject' : 'Fail to reject', 100-level ) );\n\t\tout.push( '' );\n\t}\n\treturn out.join( '\\n' );\n}\n\n\n// EXPORTS //\n\nexport default toString;\n"],"names":["toString","results","opts","decision","level","dgts","out","alt","ci","arguments","length","isObject","TypeError","format","hasOwnProp","isPositiveInteger","digits","isBoolean","alternative","alpha","method","nullValue","pValue","statistic","push","join"],"mappings":";;ofA8EA,SAASA,EAAUC,EAASC,GAC3B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIJ,GAFAH,EAAO,EACPF,GAAW,EACNM,UAAUC,OAAS,EAAI,CAC3B,IAAMC,EAAUT,GACf,MAAM,IAAIU,UAAWC,EAAQ,SAAUX,IAExC,GAAKY,EAAYZ,EAAM,UAAa,CACnC,IAAMa,EAAmBb,EAAKc,QAC7B,MAAM,IAAIJ,UAAWC,EAAQ,SAAU,SAAUX,EAAKc,SAEvDX,EAAOH,EAAKc,MACZ,CACD,GAAKF,EAAYZ,EAAM,YAAe,CACrC,IAAMe,EAAWf,EAAKC,UACrB,MAAM,IAAIS,UAAWC,EAAQ,SAAU,WAAYX,EAAKC,WAEzDA,EAAWD,EAAKC,QAChB,CACD,CACD,OAASF,EAAQiB,aACjB,IAAK,OACJX,EAAM,YACN,MACD,IAAK,UACJA,EAAM,eACN,MAED,QACCA,EAAM,eAsBP,OAlBAH,EAAkC,KAAxB,EAAMH,EAAQkB,OACxBX,EAAKP,EAAQO,GAEbF,EAAM,CACL,GACAL,EAAQmB,OACR,GACAP,EAAQ,8CAA8CR,EAAK,IAAKE,EAAKN,EAAQoB,WAC7E,GACAR,EAAQ,kBAAkBR,EAAK,IAAKJ,EAAQqB,QAC5CT,EAAQ,qBAAqBR,EAAK,IAAKJ,EAAQsB,WAC/CV,EAAQ,SAASR,EAAK,gCAAgCA,EAAK,SAASA,EAAK,KAAMD,EAAOI,EAAI,GAAKA,EAAI,IACnG,IAEIL,IACJG,EAAIkB,KAAMX,EAAQ,uDAAuDR,EAAK,yBAA4BJ,EAAqB,SAAA,SAAW,iBAAkB,IAAIG,IAChKE,EAAIkB,KAAM,KAEJlB,EAAImB,KAAM,KAClB"}
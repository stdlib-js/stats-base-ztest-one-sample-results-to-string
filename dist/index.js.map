{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Serializes a one-sample Z-test results object as a formatted string.\n*\n* ## Notes\n*\n* -   Example output:\n*\n*     ```text\n*\n*     One-sample Z-test\n*\n*     Alternative hypothesis: True mean is less than 1.0\n*\n*        pValue: 0.0406\n*        statistic: 9.9901\n*        95% confidence interval: [9.7821, 10.4451]\n*\n*     Test Decision: Reject null in favor of alternative at 5% significance level\n*\n*     ```\n*\n* @param {Object} results - one-sample Z-test results object\n* @param {Options} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits to display after decimal points\n* @param {boolean} [opts.decision=true] - boolean indicating whether to show the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} serialized results\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n*\n* var results = {\n*     'rejected': false,\n*     'alpha': 0.05,\n*     'pValue': 0.3364,\n*     'statistic': 11.7586,\n*     'nullValue': 0.0,\n*     'sd': 0.4563,\n*     'ci': new Float64Array( [ 9.9983, 11.4123 ] ),\n*     'alternative': 'two-sided',\n*     'method': 'One-sample Z-test'\n* };\n*\n* var str = toString( results );\n* // returns <string>\n*/\nfunction toString( results, opts ) { // eslint-disable-line stdlib/no-redeclare\n\tvar decision;\n\tvar level;\n\tvar dgts;\n\tvar out;\n\tvar alt;\n\tvar ci;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tswitch ( results.alternative ) {\n\tcase 'less':\n\t\talt = 'less than';\n\t\tbreak;\n\tcase 'greater':\n\t\talt = 'greater than';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\talt = 'not equal to';\n\t\tbreak;\n\t}\n\n\tlevel = ( 1.0 - results.alpha ) * 100;\n\tci = results.ci;\n\n\tout = [\n\t\t'',\n\t\tresults.method,\n\t\t'',\n\t\tformat( 'Alternative hypothesis: True mean is %s %0.'+dgts+'f', alt, results.nullValue ),\n\t\t'',\n\t\tformat( '    pValue: %0.'+dgts+'f', results.pValue ),\n\t\tformat( '    statistic: %0.'+dgts+'f', results.statistic ),\n\t\tformat( '    %.'+dgts+'f%% confidence interval: [%0.'+dgts+'f, %0.'+dgts+'f]', level, ci[ 0 ], ci[ 1 ] ),\n\t\t''\n\t];\n\tif ( decision ) {\n\t\tout.push( format( 'Test Decision: %s null in favor of alternative at %.'+dgts+'f%% significance level', ( results.rejected ) ? 'Reject' : 'Fail to reject', 100-level ) );\n\t\tout.push( '' );\n\t}\n\treturn out.join( '\\n' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serialize a one-sample Z-test results object as a formatted string.\n*\n* @module @stdlib/stats-base-ztest-one-sample-results-to-string\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var res2str = require( '@stdlib/stats-base-ztest-one-sample-results-to-string' );\n*\n* var results = {\n*     'rejected': false,\n*     'alpha': 0.05,\n*     'pValue': 0.3364,\n*     'statistic': 11.7586,\n*     'nullValue': 0.0,\n*     'sd': 0.4563,\n*     'ci': new Float64Array( [ 9.9983, 11.4123 ] ),\n*     'alternative': 'two-sided',\n*     'method': 'One-sample Z-test'\n* };\n*\n* var str = res2str( results );\n* // returns <string>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAoB,QAAS,oCAAqC,EAClEC,EAAW,QAAS,gCAAiC,EACrDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAa,QAAS,iCAAkC,EACxDC,EAAS,QAAS,uBAAwB,EAoD9C,SAASC,EAAUC,EAASC,EAAO,CAClC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIJ,GAFAH,EAAO,EACPF,EAAW,GACN,UAAU,OAAS,EAAI,CAC3B,GAAK,CAACP,EAAUM,CAAK,EACpB,MAAM,IAAI,UAAWH,EAAQ,yDAA0DG,CAAK,CAAE,EAE/F,GAAKJ,EAAYI,EAAM,QAAS,EAAI,CACnC,GAAK,CAACP,EAAmBO,EAAK,MAAO,EACpC,MAAM,IAAI,UAAWH,EAAQ,wEAAyE,SAAUG,EAAK,MAAO,CAAE,EAE/HG,EAAOH,EAAK,MACb,CACA,GAAKJ,EAAYI,EAAM,UAAW,EAAI,CACrC,GAAK,CAACL,EAAWK,EAAK,QAAS,EAC9B,MAAM,IAAI,UAAWH,EAAQ,+DAAgE,WAAYG,EAAK,QAAS,CAAE,EAE1HC,EAAWD,EAAK,QACjB,CACD,CACA,OAASD,EAAQ,YAAc,CAC/B,IAAK,OACJM,EAAM,YACN,MACD,IAAK,UACJA,EAAM,eACN,MACD,IAAK,YACL,QACCA,EAAM,eACN,KACD,CAEA,OAAAH,GAAU,EAAMH,EAAQ,OAAU,IAClCO,EAAKP,EAAQ,GAEbK,EAAM,CACL,GACAL,EAAQ,OACR,GACAF,EAAQ,8CAA8CM,EAAK,IAAKE,EAAKN,EAAQ,SAAU,EACvF,GACAF,EAAQ,kBAAkBM,EAAK,IAAKJ,EAAQ,MAAO,EACnDF,EAAQ,qBAAqBM,EAAK,IAAKJ,EAAQ,SAAU,EACzDF,EAAQ,SAASM,EAAK,gCAAgCA,EAAK,SAASA,EAAK,KAAMD,EAAOI,EAAI,CAAE,EAAGA,EAAI,CAAE,CAAE,EACvG,EACD,EACKL,IACJG,EAAI,KAAMP,EAAQ,uDAAuDM,EAAK,yBAA4BJ,EAAQ,SAAa,SAAW,iBAAkB,IAAIG,CAAM,CAAE,EACxKE,EAAI,KAAM,EAAG,GAEPA,EAAI,KAAM,IAAK,CACvB,CAKAZ,EAAO,QAAUM,IC/FjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isPositiveInteger", "isObject", "isBoolean", "hasOwnProp", "format", "toString", "results", "opts", "decision", "level", "dgts", "out", "alt", "ci", "main"]
}
